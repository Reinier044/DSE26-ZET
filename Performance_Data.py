# -*- coding: utf-8 -*-
"""
Created on Tue Jun 16 09:24:17 2020

@author: Reinier
"""
import numpy as np
from Pushback import taxi_method

#taxi_method = 'full'

a_ZET = np.array( [0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 ,
 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 ,
 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.7 ,
 0.7 , 0.7 , 0.7 , 0.7 , 0.7 , 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65,
 0.65, 0.59, 0.59, 0.59, 0.59, 0.57, 0.57, 0.55, 0.55, 0.5 , 0.5 , 0.5 ,
 0.5 , 0.5 , 0.5 , 0.47, 0.47, 0.47, 0.47, 0.45, 0.45, 0.43, 0.43, 0.4 ,
 0.4 , 0.4 , 0.4 , 0.4 , 0.4 , 0.4 , 0.4 , 0.37, 0.37, 0.37, 0.37, 0.37,
 0.37, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.32, 0.32, 0.32,
 0.32, 0.32, 0.32, 0.32, 0.32, 0.3 , 0.3 , 0.3 , 0.3 , 0.3 , 0.3 , 0.3 ,
 0.3 , 0.27, 0.27, 0.27, 0.27, 0.27, 0.27, 0.25, 0.25, 0.25, 0.25, 0.25,
 0.25, 0.25, 0.25, 0.25, 0.25]  )


v_ZET = np.array(    [ 0.,  0.175 ,  0.35  ,  0.525 ,  0.7   ,  0.875 ,  1.05  ,  1.225 ,
  1.4   ,  1.575 ,  1.75  ,  1.925 ,  2.1   ,  2.275 ,  2.45  ,  2.625 ,
  2.8   ,  2.975 ,  3.15  ,  3.325 ,  3.5   ,  3.675 ,  3.85  ,  4.025 ,
  4.2   ,  4.375 ,  4.55  ,  4.725 ,  4.9   ,  5.075 ,  5.25  ,  5.425 ,
  5.6   ,  5.775 ,  5.95  ,  6.125 ,  6.3   ,  6.475 ,  6.65  ,  6.825 ,
  7.    ,  7.1625,  7.325 ,  7.4875,  7.65  ,  7.8125,  7.975 ,  8.1375,
  8.3   ,  8.4475,  8.595 ,  8.7425,  8.89  ,  9.0325,  9.175 ,  9.3125,
  9.45  ,  9.575 ,  9.7   ,  9.825 ,  9.95  , 10.075 , 10.2   , 10.3175,
 10.435 , 10.5525, 10.67  , 10.7825, 10.895 , 11.0025, 11.11  , 11.21  ,
 11.31  , 11.41  , 11.51  , 11.61  , 11.71  , 11.81  , 11.91  , 12.0025,
 12.095 , 12.1875, 12.28  , 12.3725, 12.465 , 12.5525, 12.64  , 12.7275,
 12.815 , 12.9025, 12.99  , 13.0775, 13.165 , 13.245 , 13.325 , 13.405 ,
 13.485 , 13.565 , 13.645 , 13.725 , 13.805 , 13.88  , 13.955 , 14.03  ,
 14.105 , 14.18  , 14.255 , 14.33  , 14.405 , 14.4725, 14.54  , 14.6075,
 14.675 , 14.7425, 14.81  , 14.8725, 14.935 , 14.9975, 15.06  , 15.1225,
 15.185 , 15.2475, 15.31  , 15.3725, 15.435 ] )

if taxi_method == 'internal':
    
    Pa_ZET = np.array([  0.    ,   5.274 ,  10.5481,  15.8221,  21.0962,  26.3702,  31.6443,
      36.9183,  42.1924,  47.4664,  52.7405,  58.0145,  63.2886,  68.5626,
      73.8367,  79.1107,  84.3848,  89.6588,  94.9328, 100.2069, 105.4809,
     110.755 , 116.029 , 121.3031, 126.5771, 131.8512, 137.1252, 142.3993,
     147.6733, 152.9474, 158.2214, 163.4955, 168.7695, 174.0436, 179.3176,
     184.5917, 189.8657, 195.1397, 200.4138, 205.6878, 210.9619, 203.405 ,
     208.0198, 212.6346, 217.2493, 221.8641, 226.4789, 231.0937, 235.7084,
     222.271 , 226.152 , 230.033 , 233.914 , 231.3812, 235.0316, 232.0768,
     235.5034, 221.9695, 224.8673, 227.765 , 230.6628, 233.5606, 236.4584,
     228.4182, 231.0195, 233.6208, 236.2222, 231.2133, 233.6257, 228.2784,
     230.5088, 220.8884, 222.8588, 224.8293, 226.7997, 228.7702, 230.7406,
     232.7111, 234.6816, 223.9822, 225.7084, 227.4346, 229.1607, 230.8869,
     232.6131, 225.5154, 227.0874, 228.6594, 230.2314, 231.8034, 233.3754,
     234.9474, 236.5194, 224.1384, 225.4922, 226.846 , 228.1998, 229.5536,
     230.9074, 232.2612, 233.615 , 225.2303, 226.4474, 227.6644, 228.8814,
     230.0984, 231.3155, 232.5325, 233.7495, 219.7459, 220.7708, 221.7957,
     222.8206, 223.8455, 224.8704, 215.4752, 216.3807, 217.2863, 218.1918,
     219.0973, 220.0028, 220.9083, 221.8138, 222.7193, 223.6248])
    
    Pv_ZET = np.array([ 0.    ,  1.014 ,  2.0279,  3.0419,  4.0559,  5.0699,  6.0838,  7.0978,
      8.1118,  9.1258, 10.1397, 11.1537, 12.1677, 13.1817, 14.1956, 15.2096,
     16.2236, 17.2376, 18.2515, 19.2655, 20.2795, 21.2935, 22.3074, 23.3214,
     24.3354, 25.3494, 26.3633, 27.3773, 28.3913, 29.4053, 30.4192, 31.4332,
     32.4472, 33.4612, 34.4751, 35.4891, 36.5031, 37.517 , 38.531 , 39.545 ,
     40.559 , 41.5005, 42.4421, 43.3836, 44.3252, 45.2667, 46.2083, 47.1498,
     48.0914, 48.946 , 49.8006, 50.6553, 51.5099, 52.3356, 53.1612, 53.9579,
     54.7546, 55.4789, 56.2031, 56.9274, 57.6517, 58.3759, 59.1002, 59.781 ,
     60.4618, 61.1427, 61.8235, 62.4753, 63.1271, 63.75  , 64.3729, 64.9523,
     65.5317, 66.1111, 66.6905, 67.27  , 67.8494, 68.4288, 69.0082, 69.5442,
     70.0801, 70.6161, 71.152 , 71.688 , 72.2239, 72.7309, 73.2379, 73.7449,
     74.2519, 74.7589, 75.2659, 75.7729, 76.2798, 76.7434, 77.2069, 77.6704,
     78.134 , 78.5975, 79.061 , 79.5246, 79.9881, 80.4226, 80.8572, 81.2918,
     81.7263, 82.1609, 82.5954, 83.03  , 83.4646, 83.8557, 84.2468, 84.6379,
     85.029 , 85.4201, 85.8112, 86.1733, 86.5355, 86.8976, 87.2597, 87.6219,
     87.984 , 88.3461, 88.7083, 89.0704, 89.4325])
    
elif taxi_method == 'full':
    Pa_ZET = np.array([  0.    ,  18.4844,  36.9688,  55.4532,  73.9376,  92.422 , 110.9064,
     129.3908, 147.8752, 166.3596, 184.844 , 203.3284, 221.8128, 240.2973,
     258.7817, 277.2661, 295.7505, 314.2349, 332.7193, 351.2037, 369.6881,
     388.1725, 406.6569, 425.1413, 443.6257, 462.1101, 480.5945, 499.0789,
     517.5633, 536.0477, 554.5321, 573.0165, 591.5009, 609.9853, 628.4697,
     646.9541, 665.4385, 683.9229, 702.4074, 720.8918, 739.3762, 712.891 ,
     729.0648, 745.2386, 761.4124, 777.5861, 793.7599, 809.9337, 826.1075,
     779.0121, 792.6142, 806.2164, 819.8185, 810.9415, 823.7352, 813.3793,
     825.389 , 777.9554, 788.1115, 798.2676, 808.4236, 818.5797, 828.7358,
     800.5567, 809.6738, 818.7909, 827.908 , 810.3531, 818.8079, 800.0667,
     807.8838, 774.1663, 781.0723, 787.9784, 794.8844, 801.7904, 808.6965,
     815.6025, 822.5085, 785.0097, 791.0595, 797.1094, 803.1592, 809.2091,
     815.2589, 790.3831, 795.8926, 801.4022, 806.9117, 812.4213, 817.9308,
     823.4403, 828.9499, 785.5571, 790.3018, 795.0466, 799.7914, 804.5362,
     809.2809, 814.0257, 818.7705, 789.3841, 793.6495, 797.9149, 802.1803,
     806.4457, 810.7111, 814.9765, 819.2419, 770.1623, 773.7543, 777.3464,
     780.9384, 784.5305, 788.1225, 755.1945, 758.3681, 761.5417, 764.7153,
     767.889 , 771.0626, 774.2362, 777.4098, 780.5834, 783.7571])
    
    Pv_ZET = np.array([  0.    ,   3.5538,   7.1075,  10.6613,  14.215 ,  17.7688,  21.3226,
      24.8763,  28.4301,  31.9839,  35.5376,  39.0914,  42.6451,  46.1989,
      49.7527,  53.3064,  56.8602,  60.414 ,  63.9677,  67.5215,  71.0752,
      74.629 ,  78.1828,  81.7365,  85.2903,  88.8441,  92.3978,  95.9516,
      99.5053, 103.0591, 106.6129, 110.1666, 113.7204, 117.2742, 120.8279,
     124.3817, 127.9354, 131.4892, 135.043 , 138.5967, 142.1505, 145.4504,
     148.7503, 152.0503, 155.3502, 158.6501, 161.95  , 165.25  , 168.5499,
     171.5452, 174.5405, 177.5358, 180.5311, 183.4249, 186.3187, 189.1109,
     191.9032, 194.4416, 196.98  , 199.5184, 202.0568, 204.5952, 207.1336,
     209.5197, 211.9058, 214.2919, 216.678 , 218.9625, 221.2471, 223.4301,
     225.6131, 227.6439, 229.6746, 231.7053, 233.736 , 235.7668, 237.7975,
     239.8282, 241.8589, 243.7373, 245.6158, 247.4942, 249.3726, 251.251 ,
     253.1294, 254.9063, 256.6832, 258.4601, 260.2369, 262.0138, 263.7907,
     265.5676, 267.3445, 268.969 , 270.5936, 272.2182, 273.8428, 275.4674,
     277.0919, 278.7165, 280.3411, 281.8641, 283.3872, 284.9102, 286.4333,
     287.9563, 289.4793, 291.0024, 292.5254, 293.8962, 295.2669, 296.6376,
     298.0084, 299.3791, 300.7498, 302.019 , 303.2882, 304.5574, 305.8266,
     307.0958, 308.365 , 309.6342, 310.9034, 312.1726, 313.4418])


d_ZET = -0.7                    #Maximum deceleration achieved by ZET-system -> should be negative value! [m/s^2]
a_eng = 0.7                         #Acceleration engine based taxiing [m/s^2]
thrustsetting = 0.24                #Thrust setting applied
max_d_eng = -0.7                    #Maximum deceleration conventional taxiing-> should be negative value! [m/s^2]
max_v_eng = v_ZET[-1]               #Maximum achievable velocity achieved for A321 -> 30 kts [m/s]
dt = 0.01
t_coupling_ZET = 40                 #Coupling time for ZET
t_coupling_CONV = 40                #Coupling time for conventional taxiing
power_cp = 50                       #Power needed for coupling [kW]
Jet_A1_sp_e = 42.8                  #Specific energy fuel [MJ/kg] http://large.stanford.edu/courses/2012/ph240/greenbaum1/






